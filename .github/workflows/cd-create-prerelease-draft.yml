name: Create Prerelease Draft

on:
  schedule:
    - cron: '0 10 * * 1'
  workflow_dispatch:
  workflow_call:
    inputs:
      disable-workflow:
        type: boolean
        description: "true to disable this workflow after running"
        default: false
        required: true
      disable-notes:
        type: boolean
        description: "true to disable auto generate release notes, false to auto generate release notes"
        default: false
        required: false
    secrets:
      ACTIONS_TOKEN_APP_ID:
        required: true
      ACTIONS_TOKEN_PRIVATE_KEY:
        required: true

jobs:
  draft-prerelease:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.ACTIONS_TOKEN_APP_ID }}
          private_key: ${{ secrets.ACTIONS_TOKEN_PRIVATE_KEY }}

      - name: Generate Notes Boolean
        id: generate-notes-boolean
        run: |
          echo "::set-output name=boolean::true"
          if [ "${{ inputs.disable-notes }}" == "true"]; then
            echo "::set-output name=boolean::false"
          fi

      - name: Get Date
        id: get-date
        run: |
          delimiter=$(date +'%Y-%b-%d')
          echo "::set-output name=date-string::$delimiter"

      - name: Get SHA
        id: get-sha
        run: |
          echo "::set-output name=sha::$(git rev-parse HEAD)"
          echo "::set-output name=short-sha::$(git rev-parse --short HEAD)"

      - name: Get version
        id: get-version
        run: |
          TAG_NAME=$(npm run get-version -s)-${{ steps.get-sha.outputs.short-sha }}
          if [ "$(git ls-remote --exit-code --tags origin $TAG_NAME)" ]; then
            echo "::set-output name=package-version::$TAG_NAME-${{ github.run_number }}"
          else
            echo "::set-output name=package-version::$TAG_NAME"
          fi

      - name: Create tag
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          route: POST /repos/{repo}/git/refs
          repo: ${{ github.repository }}
          ref: 'refs/tags/${{ steps.get-version.outputs.package-version }}'
          sha: ${{ steps.get-sha.outputs.sha }}

      - name: Create prerelease
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          route: POST /repos/{repo}/releases
          repo: ${{ github.repository }}
          name: ${{ steps.get-date.outputs.date-string }}
          tag_name: ${{ steps.get-version.outputs.package-version }}
          target_commitish: ${{ steps.get-sha.outputs.sha }}
          generate_release_notes: ${{ steps.generate-notes-boolean.outputs.boolean }}
          prerelease: true
          draft: true

      - name: Disable workflow boolean
        id: disable-workflow-boolean
        run: |
          echo "::set-output name=boolean::false"
          if [ "${{ inputs.disable-workflow }}" == "true"]; then
            echo "::set-output name=boolean::true"
          fi

      - name: Disable Workflow
        if: ${{ steps.disable-workflow-boolean.outputs.boolean == 'true' }}
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          route: PUT /repos/{repo}/actions/workflows/{workflow_id}/disable
          repo: ${{ github.repository }}
          workflow_id: cd-create-prerelease-draft.yml