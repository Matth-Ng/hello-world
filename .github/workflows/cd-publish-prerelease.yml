name: Pubish Prerelease

on:
  schedule:
    - cron: '30 10 * * 3'
  workflow_dispatch:
  workflow_call:
    inputs:
      latest:
        required: true
        description: "True to publish the latest draft release"
        type: boolean
        default: false
      disable-workflow:
        type: boolean
        description: "True to disable workflow after running"
        default: false
        required: true
    secrets:
      ACTIONS_TOKEN_APP_ID:
        required: true
      ACTIONS_TOKEN_PRIVATE_KEY:
        required: true

jobs:
  get-prerelease:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.get-prerelease.outputs.value }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Get releases
        id: get-releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases
          repo: ${{ github.repository }}

      - name: release offset
        id: release-offset
        run: |
          echo "::set-output name=offset::nth(1)"
          if [ "${{ inputs.latest }}" == 'true']; then
            echo "::set-output name=offset::first"
          fi

      - name: Get prerelease
        id: get-prerelease
        uses: sergeysova/jq-action@v2
        with:
          cmd: |
            cat << EOF > json.txt
            ${{ steps.get-releases.outputs.data }}
            EOF
            sed -e "s/'//g" json.txt > newjson.txt
            JSON=$(cat newjson.txt)
            echo "$JSON" | jq -r 'map(select(.draft == true and .prerelease == true)) | ${{ steps.release-offset.outputs.offset }} | .id'

  publish-for-staging:
    runs-on: ubuntu-latest
    needs: get-prerelease
    env:
      RELEASE_ID: ${{ needs.get-prerelease.outputs.RELEASE_ID }}

    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.ACTIONS_TOKEN_APP_ID }}
          private_key: ${{ secrets.ACTIONS_TOKEN_PRIVATE_KEY }}

      - name: Update release
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          route: PATCH /repos/{repo}/releases/{release_id}
          repo: ${{ github.repository }}
          release_id: ${{ env.RELEASE_ID }}
          draft: false
          prerelease: true

      - name: Disable Workflow
        if: [ inputs.disable-workflow == 'true' ]
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          route: PUT /repos/{repo}/actions/workflows/{workflow_id}/disable
          repo: ${{ github.repository }}
          workflow_id: "cd-publish-prerelease.yml"
