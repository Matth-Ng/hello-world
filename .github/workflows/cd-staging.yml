name: Deploy Prerelase to Staging

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  get-prerelease:
    if: github.event.release.prerelease == 'true'
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.get-prerelease.outputs.value }}
      RELEASE_TAG: ${{ steps.get-tag.outputs.value }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Get Variables
        run: |
          echo "${{ toJSON(github.event.release) }}"
          echo "${{ github.event.release.prerelease }}"

      - name: Get releases
        id: get-releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases
          repo: ${{ github.repository }}

      - name: Get prerelease
        id: get-prerelease
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.draft)) | nth(1) | .id'

      - name: Get Tag
        id: get-tag
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.id == ${{ steps.get-prerelease.outputs.value }})) | nth(1) | .target_commitish'
  
  update-staging-manifest:
    environment: Staging
    if: [ github.event.release.prerelease ]
    runs-on: ubuntu-latest
    needs: get-prerelease
    env:
      RELEASE_ID: ${{ needs.get-prerelease.outputs.RELEASE_ID }}
      RELEASE_TAG: ${{ needs.get-prerelease.outputs.RELEASE_TAG }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Configure AWS Credentials
        run: |
          echo "updating staging manifest"