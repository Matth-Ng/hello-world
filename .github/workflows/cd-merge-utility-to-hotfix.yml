name: Merge Utility to Hotfix

on:
  # schedule:
  #   - cron: '0 11 * * 3'
  workflow_dispatch:

jobs:
  merge-main-to-hotfix:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v3
      
      # - name: Get releases
      #   id: get-releases
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: GET /repos/{repo}/releases
      #     repo: ${{ github.repository }}

      # - name: Get Tag
      #   id: get-tag
      #   uses: sergeysova/jq-action@v2
      #   with:
      #     cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.published_at and .prerelease == false)) | first | .target_commitish'

# deploy-to-dev:
  #   uses: Matth-Ng/hello-world/.github/workflows/cd-build.yml@hotfix
    
  # create-prerelease:
  #   needs: deploy-to-dev
  #   uses: Matth-Ng/hello-world/.github/workflows/cd-create-prerelease-draft.yml@hotfix

  # publish-prerelease:
  #   needs: create-prerelease
  #   env:
  #     PUBLISH-PRERELEASE: ${{ needs.set-reusable-workflow-var.outputs.PUBLISH-PRERELEASE }}
  #   uses: Matth-Ng/hello-world/.github/workflows/cd-publish-prerelease.yml@hotfix
  #   with:
  #     latest: true

  # promote-release:
  #   needs: publish-prerelease
  #   uses: Matth-Ng/hello-world/.github/workflows/cd-promote-release.yml@hotfix

  # merge-to-main-pr:
  #   runs-on: ubuntu-latest
  #   # needs: promote-release

  #   steps:
  #     - name: Generate token
  #       id: generate-token
  #       uses: tibdex/github-app-token@v1
  #       with:
  #         app_id: ${{ secrets.ACTIONS_TOKEN_APP_ID }}
  #         private_key: ${{ secrets.ACTIONS_TOKEN_PRIVATE_KEY }}

      # - name: Create PR
      #   uses: octokit/request-action@v2.x
      #   env:
      #     GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      #   with:
      #     route: POST /repos/{repo}/pulls
      #     repo: ${{ github.repository }}
      #     title: "Hot fix"
      #     head: hotfix
      #     base: main
      #     body: "Merging hot fix changes into main"
      #     maintainer_can_modify: true
      # - name: Merge main
      #   run: |
      #     git checkout main
      #     git pull
      #     git fetch --tags origin
      #     git checkout hotfix
      #     git pull
      #     git merge ${{ steps.get-tag.outputs.data }}
      #     git push
