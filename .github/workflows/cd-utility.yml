name: Deploy Release to Utility

on:
  release:
    types: [released]
env:
  AWS_ECR_REPO: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/dsva/platform-console-ui

jobs:
  get-release:
    if: github.event.release.draft == false && github.event.release.prerelease == false
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.get-release.outputs.value }}
      RELEASE_TAG: ${{ steps.get-tag.outputs.value }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Get releases
        id: get-releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases
          repo: ${{ github.repository }}

      - name: Get release
        id: get-release
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo "${{ steps.get-releases.outputs.data }}" | jq -r 'map(select(.published_at and .prerelease == false)) | first | .id'

      - name: Get Tag
        id: get-tag
        uses: sergeysova/jq-action@v2
        with:
          cmd:  |
            cat << EOF > json.txt
            ${{ steps.get-releases.outputs.data }}
            EOF
            sed -e "s/'//g" json.txt > newjson.txt
            JSON=$(cat newjson.txt)
            echo "$JSON" | jq -r 'map(select(.id == ${{ steps.get-release.outputs.value }})) | first | .target_commitish'
  
  deploy-prod:
    environment: Utility
    runs-on: ubuntu-latest
    needs: get-release
    env:
      RELEASE_ID: ${{ needs.get-release.outputs.RELEASE_ID }}
      RELEASE_TAG: ${{ needs.get-release.outputs.RELEASE_TAG }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Configure AWS Credentials
        run: |
          echo "updating utility manifest"