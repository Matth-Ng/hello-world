name: Dev Build and Push Container

on:
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

env:
  AWS_ECR_REPO: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/dsva/platform-console-ui

jobs:
  get-prerelease:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.get-prerelease.outputs.value }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Get releases
        id: get-releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases
          repo: ${{ github.repository }}

      # - name: print variables
      #   run: |
      #     echo $"${{ steps.get-releases.outputs.data }}"

      - name: Get prerelease
        id: get-prerelease
        uses: sergeysova/jq-action@v2
        with:
          # cmd: |
          #   printf "%s\n" "$string"${{ steps.get-releases.outputs.data }} > release.json
          # temp=
          # echo $temp | sed -e "s/'//g"
          # echo "toJSON"
          # JSON="${{ steps.get-releases.outputs.data }}" | sed -e "s/'//g"
          # echo "after"
          # echo $JSON
          # echo "${ fromJSON($JSON) }" | jq 'map(select(.published_at and .prerelease == true)) | first | .id'
          # sed -e "s/'//g" <<< ${{ steps.get-releases.outputs.data }} | jq -r 'map(select(.published_at and .prerelease == true)) | first | .id'
          # echo ${{ steps.get-releases.outputs.data }} >> release.json
          # tr -d \' release.json | jq -r 'map(select(.published_at and .prerelease == true)) | first | .id'
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.draft == true and .prerelease == true)) | first | .id'

      - name: get varible
        run: |
          echo '${{ steps.get-prerelease.outputs.value }}'