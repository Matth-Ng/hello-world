name: Promote Prerelease

on:
# cron trigger, 9am Wednesdays?
  workflow_dispatch:

jobs:
  get-prerelease:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.get-prerelease.outputs.data }}
      RELEASE_SHA: ${{ steps.get-sha.outputs.data }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
    # Need to sort by created date
      - name: Get releases
        id: get-releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases
          repo: ${{ github.repository }}

      - name: Get prerelease
        id: get-prerelease
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo('${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.prerelease)) | .id)'

      - name: Get SHA
        id: get-sha
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.id == ${{ steps.get-prerelease.outputs.value }})) | first | .target_commitish'
      
      - name: Print Var
        run: |
          echo "${{ steps.get-prerelease.outputs.data }}"
          echo "${{ steps.get-sha.outputs.data }}"
  
  deploy-prod:
  #   environment: Utility
    runs-on: ubuntu-latest
    needs: get-prerelease
    env:
      RELEASE_ID: ${{ needs.get-prerelease.outputs.RELEASE_ID }}
      RELEASE_SHA: ${{ needs.get-prerelease.outputs.RELEASE_SHA }}

    steps:
    - name: Print Var
      run: |
        echo "${{ env.RELEASE_ID }}"
        echo "${{ env.RELEASE_SHA }}"
  #    - name: Deploy
  #      run: echo Update Production manifest with SHA ${{ env.RELEASE_SHA }}
  #    - name: Update release
  #      uses: octokit/request-action@v2.x
  #      with:
  #        route: PATCH /repos/{repo}/releases/{release_id}
  #        repo: ${{ github.repository }}
  #        release_id: ${{ env.RELEASE_ID }}
