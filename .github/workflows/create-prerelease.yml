name: Create Prerelease

on:
  workflow_dispatch:

jobs:
  deploy-staging:
    environment: Staging
    runs-on: ubuntu-latest
    outputs:
      RELEASE_SHA: ${{ steps.get-sha.outputs.sha }}
      MONDAY_DATE: ${{ steps.get-last-date.outputs.date }}
      PACKAGE_VERSION: ${{ steps.get-version.outputs.package-version }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v3

      - name: Get Last Date
        id: get-last-date
        shell: bash
        run: |
          # if [ "${{ github.event.inputs.latest }}" == "true" ]; then
            delimiter=$(date +'%Y-%m-%d')
          # elif [ "${{ inputs.latest-date }}" == "true" ]; then
          #   delimiter=$(date +'%Y-%m-%d')
          # elif $(date +%u) -lt 2; then
          #   delimiter=$(date +'%Y-%m-%d' -d "last-monday")
          # else 
          #   delimiter=$(date +'%Y-%m-%d' -d "last-monday - 1 week")
          # fi
          echo "::set-output name=date::$delimiter"

      - name: Get Last Monday Commits
        id: last-monday-commits
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/commits?per_page=1&until=${{ steps.get-last-date.outputs.date }}T23:59:59Z
          repo: ${{ github.repository }}

      - name: Get Tag Sha
        id: get-tag-sha
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/git/tags/{tag_sha}
          repo: ${{ github.repository }}
          tag_sha: "65a6085e15158aa87e73b64e44c1e94900b146a2"
#git tag --sort "-committerdate" | head -n 2| tail -1 | cut -d# -f2          
      - name: print variable
        shell: bash
        run: |
          echo '${{ steps.get-tag-sha.outputs.data }}'

      - name: Get SHA
        id: get-sha
        shell: bash
        run: |
          echo "::set-output name=sha::0a1aac0fd5b19fb4a5049ec7193515d1b28bbaa4"
          echo "::set-output name=short-sha::0a1aac0"
        # shortSha=$(echo ${{ fromJson(steps.last-monday-commits.outputs.data)[0].sha }} | cut -c1-7)
        # echo "::set-output name=sha::${{ fromJson(steps.last-monday-commits.outputs.data)[0].sha }}"
        # echo "::set-output name=short-sha::$shortSha"

      - name: Get version
        id: get-version
        run: |
          TAG_NAME=$(npm run get-version -s)-${{ steps.get-sha.outputs.short-sha }}
          if [ "$(git ls-remote --exit-code --tags origin $TAG_NAME)" != ""]; then
            echo "::set-output name=package-version::$TAG_NAME-${{ github.run_number }}"
          else
            echo "::set-output name=package-version::$TAG_NAME"
          fi

  update-staging-manifest:
    environment: Staging
    runs-on: ubuntu-latest
    needs: deploy-staging
    env:
      GITHUB_TOKEN: ${{ github.token }}
      RELEASE_SHA: ${{ needs.deploy-staging.outputs.RELEASE_SHA }}
      PACKAGE_VERSION: ${{ needs.deploy-staging.outputs.PACKAGE_VERSION }}
      BRANCH_NAME: ${{ github.ref_name }}

    steps:
      - name: update staging manifest
        run: |
          echo "updating staging manifest"
      - name: Extract branch name
        shell: bash
        run: |
          echo "${{ env.BRANCH_NAME }}"

  update-release-staging:
    environment: Staging
    runs-on: ubuntu-latest
    needs: [deploy-staging, update-staging-manifest]
    env:
      MONDAY_DATE: ${{ needs.deploy-staging.outputs.MONDAY_DATE }}
      RELEASE_SHA: ${{ needs.deploy-staging.outputs.RELEASE_SHA }}
      PACKAGE_VERSION: ${{ needs.deploy-staging.outputs.PACKAGE_VERSION }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Create prerelease
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/releases
          repo: ${{ github.repository }}
          name: ${{ env.MONDAY_DATE }}-Staging-Utility
          tag_name: ${{ env.PACKAGE_VERSION }}
          target_commitish: ${{ env.RELEASE_SHA }}
          generate_release_notes: true
          prerelease: true