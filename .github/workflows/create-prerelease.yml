name: Create Prerelease

on:
  # release:
  # types: [published]
# cron trigger, 10am Wednesdays?
  # schedule:
  #   - cron: '30 2 * * 3'
  workflow_dispatch:

jobs:
  deploy-staging:
    environment: Staging
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v3

      - name: Get SHA
        id: get-sha
        # committer-date:>2016-01-01
        run: |
          echo”::set-output name=date::$(date+’%Y/%m/%d’ -d "8 days")”
          echo "::set-output name=sha::$(git rev-parse HEAD)"
          echo "::set-output name=short-sha::$(git rev-parse --short HEAD)"
      - name: Get version
        id: get-version
        run: |
          echo "${{ steps.get-sha.outputs.date }}_________________________________________"
          echo "::set-output name=package-version::$(npm run get-version -s)-${{ steps.get-sha.outputs.short-sha }}"
      - name: Get previous release
        id: previous-release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases/latest
          repo: ${{ github.repository }}

      - name: Create tag
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/git/refs
          repo: ${{ github.repository }}
          ref: 'refs/tags/${{ steps.get-version.outputs.package-version }}'
          sha: ${{ steps.get-sha.outputs.sha }}

      - name: Generate release notes
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/releases/generate-notes
          repo: ${{ github.repository }}
          tag_name: ${{ steps.get-version.outputs.package-version }}
          previous_tag_name: ${{ fromJson(steps.previous-release.outputs.data).tag_name }}
          target_commitish: ${{ steps.get-sha.outputs.sha }}

      - name: Deploy
        run: echo Update Staging manifest with SHA ${{ steps.get-sha.outputs.sha }}

      - name: Create prerelease
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repo}/releases
          repo: ${{ github.repository }}
          tag_name: ${{ steps.get-version.outputs.package-version }}
          target_commitish: ${{ steps.get-sha.outputs.sha }}
          prerelease: true