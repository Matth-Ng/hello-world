name: Publish Prerelease

on:
  schedule:
    - cron: '0 12 * * 3'
  workflow_dispatch:
    inputs:
      latest:
        description: 'Check to use current date and time, otherwise default to last Monday'
        type: boolean
        required: false
        default: false

env:
  AWS_ECR_REPO: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/dsva/platform-console-ui

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.get-prerelease.outputs.value }}
      RELEASE_TAG: ${{ steps.get-tag.outputs.value }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Get releases
        id: get-releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases
          repo: ${{ github.repository }}

      - name: Get prerelease
        id: get-prerelease
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.draft)) | second | .id'

      - name: Get Tag
        id: get-tag
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.id == ${{ steps.get-prerelease.outputs.value }})) | first | .target_commitish'
  

  update-staging-manifest:
    environment: Staging
    runs-on: ubuntu-latest
    needs: get-prerelease
    env:
      RELEASE_ID: ${{ needs.get-prerelease.outputs.RELEASE_ID }}
      RELEASE_TAG: ${{ needs.get-prerelease.outputs.RELEASE_TAG }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Configure AWS Credentials
        run: | 
          echo "Updating staging Manifest"
      
      - name: Update release
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{repo}/releases/{release_id}
          repo: ${{ github.repository }}
          release_id: ${{ env.RELEASE_ID }}
          draft: false