name: Publish Prerelease

on:
  schedule:
    - cron: '0 12 * * 3'
  workflow_dispatch:

jobs:
  get-prerelease:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.get-prerelease.outputs.value }}
      RELEASE_TAG: ${{ steps.get-tag.outputs.value }}
    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Get releases
        id: get-releases
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repo}/releases
          repo: ${{ github.repository }}

      - name: Get prerelease
        id: get-prerelease
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.draft)) | nth(1) | .id'

      - name: Get Tag
        id: get-tag
        uses: sergeysova/jq-action@v2
        with:
          cmd: echo '${{ steps.get-releases.outputs.data }}' | jq -r 'map(select(.id == ${{ steps.get-prerelease.outputs.value }})) | nth(1) | .target_commitish'
  
  update-staging-manifest:
    environment: Staging
    runs-on: ubuntu-latest
    needs: get-prerelease
    env:
      RELEASE_ID: ${{ needs.get-prerelease.outputs.RELEASE_ID }}
      RELEASE_TAG: ${{ needs.get-prerelease.outputs.RELEASE_TAG }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Add and Commit change(s)
        uses: EndBug/add-and-commit@v7
        with:
          author_name: va-vsp-bot
          author_email: devops@va.gov
          branch: main
          cwd: vsp-infra-application-manifests/apps/platform-pst-console-ui/backstage
          add: staging/*.yaml
          message: 'auto update platform-console-ui manifests'
      
      - name: Update release
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{repo}/releases/{release_id}
          repo: ${{ github.repository }}
          release_id: ${{ env.RELEASE_ID }}
          draft: false
          prerelease: true